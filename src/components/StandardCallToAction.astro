---
interface Props {
  title: string;
  paragraph?: string;
  buttonText: string;
  buttonLink: string;
  showParagraph?: boolean;
}

const {
  title,
  paragraph,
  buttonText,
  buttonLink,
  showParagraph = false,
} = Astro.props;
---

<section class="standard-call-to-action-section">
  <div class="content-container">
    <h2>{title}</h2>
    {showParagraph && paragraph && <p class="subtitle">{paragraph}</p>}
    <button class="primary" onclick={`window.location.href='${buttonLink}'`}>{buttonText}</button>
    <p class="small-text">
      * Aprovação sujeita a análise do negócio e faturamento.
    </p>
  </div>
  <div class="image-container">
    <!-- Image will be added via CSS background or an img tag if dynamic -->
  </div>
</section>



<style>
  .standard-call-to-action-section {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    background-color: var(--color-background);
    color: hsla(36, 67%, 95%, 1); /* #F8F3E7 */
    gap: max(2em, 4cqw);
    text-align: left;
  }

  .content-container {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    gap: max(1em, 1.5cqw);
    max-width: 32cqw;
  }

  h2 {
    font-family: "Montserrat", sans-serif;
    font-weight: var(--font-weight-bold);
    font-size: max(2.5em, 4.1cqw);
    line-height: 1.2;
  }

  .image-container {
    width: 100%;
    height: max(20em, 80cqh); /* Placeholder height */
    background-image: url("/standartcta.png"); /* Placeholder image */
    background-size: cover;
    background-position: center;
    border-radius: clamp(1rem,1.5cqw,8rem);
    overflow: hidden;
  }

  @media (max-width: 960px) {
    .standard-call-to-action-section {
      flex-direction: column-reverse;
      text-align: center;
      align-items: center;
      justify-content: center;
    }

    .content-container {
      align-items: center;
      max-width: 100cqw;
    }
  }
</style>
