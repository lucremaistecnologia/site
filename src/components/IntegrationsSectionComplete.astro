---
import { Image } from "astro:assets";
import type { ImageMetadata } from "astro";

// Importações de logos
import GoogleLogo from "../../public/logos/google.svg";
import Cademi from "../../public/logos/cademi.webp";
import Memberkit from "../../public/logos/memberkit.svg";
import Mentorfy from "../../public/logos/mentorfy.webp";
import Themembers from "../../public/logos/themembers.webp";
import Facebook from "../../public/logos/facebook.webp";
import Outbrain from "../../public/logos/outbrain.webp";
import Notazz from "../../public/logos/notazz.webp";
import Contaazul from "../../public/logos/contaazul.webp";
import Enotas from "../../public/logos/enotas.webp";
import Hubspot from "../../public/logos/hubspot.svg";
import AlpaClass from "../../public/logos/AlpaClass.webp";
import AppSell from "../../public/logos/AppSell.webp";
import AstronMembers from "../../public/logos/Astron members.svg";
import Builderall from "../../public/logos/Builderall.webp";
import Circle from "../../public/logos/circle.svg";
import Curseduca from "../../public/logos/Curseduca.webp";
import EadPlataforma from "../../public/logos/Ead plataforma.webp";
import Eduvem from "../../public/logos/eduvem.webp";
import Entregadigital from "../../public/logos/entregadigital.svg";
import EscolaAvancada from "../../public/logos/Escola avançada.webp";
import Herospark from "../../public/logos/Herospark.webp";
import Hiiatus from "../../public/logos/hiiatus.svg";
import Hotscool from "../../public/logos/hotscool.webp";
import Kajabi from "../../public/logos/kajabi.webp";
import Leadlovers from "../../public/logos/leadlovers.webp";
import Learnworlds from "../../public/logos/learnworlds.webp";
import Logotoolzz from "../../public/logos/logotoolzz.svg";
import Moodle from "../../public/logos/moodle.webp";
import Systeme from "../../public/logos/systeme.webp";
import Thinkific from "../../public/logos/thinkific.svg";
import WixLogo from "../../public/logos/wix-logo.webp";
import Botconversa from "../../public/logos/Botconversa.svg";
import Certiflink from "../../public/logos/Certiflink.webp";
import Clint from "../../public/logos/clint.webp";
import Devzapp from "../../public/logos/devzapp.svg";
import Hotzap from "../../public/logos/hotzap.webp";
import Konvert from "../../public/logos/konvert.svg";
import LeadTracker from "../../public/logos/LeadTracker.webp";
import NotificacoesInteligentes from "../../public/logos/notificações inteligentes.svg";
import Pluglead from "../../public/logos/pluglead.svg";
import RecupinBranca from "../../public/logos/recupin-branca.svg";
import Reportana from "../../public/logos/reportana.svg";
import Sak from "../../public/logos/sak.webp";
import Sellflux from "../../public/logos/sellflux.webp";
import Socialhub from "../../public/logos/socialhub.webp";
import ActiveCampaing from "../../public/logos/ActiveCampaing.webp";
import AgileCRM from "../../public/logos/AgileCRM.webp";
import Biu from "../../public/logos/biu.webp";
import Bling from "../../public/logos/Bling.webp";
import Blix from "../../public/logos/blix.webp";
import Brevo from "../../public/logos/Brevo.webp";
import Clickmembers from "../../public/logos/Clickmembers.webp";
import Closum from "../../public/logos/Closum.webp";
import ConstantContact from "../../public/logos/Constant Contact.webp";
import ConvertKit from "../../public/logos/ConvertKit.webp";
import Digisan from "../../public/logos/DigisanDigisan.webp";
import Dinamize from "../../public/logos/Dinamize.webp";
import Egoi from "../../public/logos/e-goi.webp";
import GetResponse from "../../public/logos/GetResponse.webp";
import GreenSales from "../../public/logos/green Sales.webp";
import Infobip from "../../public/logos/infobip.webp";
import Invoicexpress from "../../public/logos/Invoicexpress.webp";
import Iuli from "../../public/logos/Iuli.webp";
import IziBizi from "../../public/logos/IziBizi.svg";
import Kartra from "../../public/logos/Kartra.webp";
import Keap from "../../public/logos/keap.webp";
import Klaviyo from "../../public/logos/klaviyo.webp";
import LeadsZAPP from "../../public/logos/LeadsZAPP.webp";
import Linkseller from "../../public/logos/Linkseller.webp";
import Mailchimp from "../../public/logos/Mailchimp.webp";
import MailerLite from "../../public/logos/mailer Lite.webp";
import MailingBoss from "../../public/logos/Mailing Boss.webp";
import MailWizz from "../../public/logos/MailWizz.webp";
import Mautic from "../../public/logos/mautic.webp";
import Moloni from "../../public/logos/moloni.webp";
import Omie from "../../public/logos/Omie.webp";
import Ontraport from "../../public/logos/ontraport.webp";
import Pluga from "../../public/logos/Pluga.webp";
import RDStation from "../../public/logos/RD Station.webp";
import Sendpulse from "../../public/logos/Sendpulse.webp";
import Smartnotas from "../../public/logos/Smartnotas.webp";
import Spedy from "../../public/logos/Spedy.webp";
import Tiny from "../../public/logos/Tiny.webp";
import Vhsys from "../../public/logos/vhsys.webp";
import Voxuy from "../../public/logos/Voxuy.webp";
import WiiChat from "../../public/logos/WiiChat.webp";
import LinkedIn from "../../public/logos/LinkedIn.webp";
import Taboola from "../../public/logos/Taboola.webp";

interface LogoItem {
  src: ImageMetadata;
  alt: string;
  name: string;
}

interface IntegrationCategory {
  title: string;
  logos: LogoItem[];
}

const integrationCategories: IntegrationCategory[] = [
  {
    title: "Áreas de Membro",
    logos: [
      { src: Circle, alt: "Circle Logo", name: "Circle" },
      { src: WixLogo, alt: "Wix Logo", name: "Wix" },
      { src: Thinkific, alt: "Thinkific Logo", name: "Thinkific" },
      { src: Logotoolzz, alt: "Toolzz Logo", name: "Toolzz" },
      { src: Systeme, alt: "Systeme Logo", name: "Systeme" },
      { src: Moodle, alt: "Moodle Logo", name: "Moodle" },
      { src: Memberkit, alt: "Memberkit Logo", name: "memberkit" },
      { src: Learnworlds, alt: "LearnWorlds Logo", name: "LearnWorlds" },
      { src: Leadlovers, alt: "Leadlovers Logo", name: "Leadlovers" },
      { src: Kajabi, alt: "Kajabi Logo", name: "Kajabi" },
      { src: Hotscool, alt: "Hotscool Logo", name: "Hotscool" },
      { src: Herospark, alt: "Herospark Logo", name: "Herospark" },
      // { src: Eduvem, alt: "Eduvem Logo", name: "eduvem" },
      // { src: EadPlataforma, alt: "Ead plataforma Logo", name: "Ead plataforma"},
      { src: AlpaClass, alt: "AlpaClass Logo", name: "AlpaClass" },
      { src: Themembers, alt: "The Members Logo", name: "The Members" },
      { src: Mentorfy, alt: "Mentorfy Logo", name: "Mentorfy" },
      { src: Hiiatus, alt: "Hiiatus Logo", name: "hiiatus" },
      {
        src: EscolaAvancada,
        alt: "Escola avançada Logo",
        name: "Escola avançada",
      },
      {
        src: Entregadigital,
        alt: "Entrega digital Logo",
        name: "Entrega digital",
      },
      { src: Curseduca, alt: "Curseduca Logo", name: "Curseduca" },
      { src: Cademi, alt: "Cademí Logo", name: "Cademí" },
      { src: Builderall, alt: "Builderall Logo", name: "Builderall" },
      {
        src: AstronMembers,
        alt: "Astron members Logo",
        name: "Astron members",
      },
      { src: AppSell, alt: "AppSell Logo", name: "AppSell" },
      { src: Clickmembers, alt: "Clickmembers Logo", name: "Clickmembers" },
    ],
  },
  {
    title: "Dados de Conversão",
    logos: [
      { src: Facebook, alt: "Facebook Logo", name: "Facebook" },
      { src: GoogleLogo, alt: "Google Logo", name: "Google" },
      { src: LinkedIn, alt: "Linked In Logo", name: "Linked In" },
      { src: Outbrain, alt: "Outbrain Logo", name: "Outbrain" },
      { src: Taboola, alt: "Taboola Logo", name: "Taboola" },
    ],
  },
  {
    title: "Recuperação de Vendas",
    logos: [
      { src: Hotzap, alt: "Hotzapp Logo", name: "Hotzapp" },
      { src: Konvert, alt: "Konvert Logo", name: "Konvert" },
      {
        src: NotificacoesInteligentes,
        alt: "Notificações inteligentes Logo",
        name: "Notificações inteligentes",
      },
      { src: RecupinBranca, alt: "Recup.in Logo", name: "Recup.in" },
      { src: Reportana, alt: "Reportana Logo", name: "Reportana" },
      { src: Sak, alt: "SAK Logo", name: "SAK" },
      { src: Sellflux, alt: "SellFlux Logo", name: "SellFlux" },
      { src: Socialhub, alt: "SocialHub Logo", name: "SocialHub" },
      { src: Pluglead, alt: "PlugLead Logo", name: "PlugLead" },
    ],
  },
  {
    title: "Automações",
    logos: [
      { src: Certiflink, alt: "Certiflink Logo", name: "Certiflink" },
      { src: Clint, alt: "Clint Logo", name: "Clint" },
      { src: Botconversa, alt: "Botconversa Logo", name: "Botconversa" },
      { src: Devzapp, alt: "Devzapp Logo", name: "Devzapp" },
      { src: LeadTracker, alt: "LeadTracker Logo", name: "LeadTracker" },
      { src: Linkseller, alt: "Linkseller Logo", name: "Linkseller" },
      { src: Pluga, alt: "Pluga Logo", name: "Pluga" },
      { src: Voxuy, alt: "Voxuy Logo", name: "Voxuy" },
      { src: WiiChat, alt: "WiiChat Logo", name: "WiiChat" },
    ],
  },
  {
    title: "E-mail Marketing e CRM",
    logos: [
      {
        src: ActiveCampaing,
        alt: "ActiveCampaing Logo",
        name: "ActiveCampaing",
      },
      { src: AgileCRM, alt: "AgileCRM Logo", name: "AgileCRM" },
      { src: Brevo, alt: "Brevo Logo", name: "Brevo" },
      { src: Closum, alt: "Closum Logo", name: "Closum" },
      {
        src: ConstantContact,
        alt: "Constant Contact Logo",
        name: "Constant Contact",
      },
      { src: ConvertKit, alt: "ConvertKit Logo", name: "ConvertKit" },
      { src: Dinamize, alt: "Dinamize Logo", name: "Dinamize" },
      { src: Egoi, alt: "e-goi Logo", name: "e-goi" },
      { src: GetResponse, alt: "GetResponse Logo", name: "GetResponse" },
      { src: GreenSales, alt: "green Sales Logo", name: "green Sales" },
      { src: Hubspot, alt: "Hubspot Logo", name: "Hubspot" },
      { src: Infobip, alt: "Infobip Logo", name: "Infobip" },
      { src: Kartra, alt: "Kartra Logo", name: "Kartra" },
      { src: Keap, alt: "Keap Logo", name: "Keap" },
      { src: Klaviyo, alt: "Klaviyo Logo", name: "Klaviyo" },
      { src: LeadsZAPP, alt: "LeadsZAPP Logo", name: "LeadsZAPP" },
      { src: Mailchimp, alt: "Mailchimp Logo", name: "Mailchimp" },
      { src: MailerLite, alt: "MailerLite Logo", name: "MailerLite" },
      { src: MailingBoss, alt: "MailingBoss Logo", name: "MailingBoss" },
      { src: MailWizz, alt: "MailWizz Logo", name: "MailWizz" },
      { src: Mautic, alt: "Mautic Logo", name: "Mautic" },
      { src: Ontraport, alt: "Ontraport Logo", name: "Ontraport" },
      { src: RDStation, alt: "RD Station Logo", name: "RD Station" },
      { src: Sendpulse, alt: "Sendpulse Logo", name: "Sendpulse" },
    ],
  },
  {
    title: "Emissão de Notas Fiscais",
    logos: [
      { src: Enotas, alt: "Enotas Logo", name: "Enotas" },
      { src: Notazz, alt: "Notazz Logo", name: "Notazz" },
      { src: Bling, alt: "Bling Logo", name: "Bling" },
      { src: Omie, alt: "Omie Logo", name: "Omie" },
      { src: Digisan, alt: "Digisan Logo", name: "Digisan" },
      { src: Invoicexpress, alt: "Invoicexpress Logo", name: "Invoicexpress" },
      { src: Tiny, alt: "Tiny Logo", name: "Tiny" },
      { src: Iuli, alt: "luli Logo", name: "luli" },
      { src: Spedy, alt: "Spedy Logo", name: "Spedy" },
      { src: IziBizi, alt: "IziBizi Logo", name: "IziBizi" },
      { src: Vhsys, alt: "vhsys Logo", name: "vhsys" },
      { src: Smartnotas, alt: "Smartnotas Logo", name: "Smartnotas" },
      { src: Contaazul, alt: "Conta Azul Logo", name: "Conta Azul" },
      { src: Moloni, alt: "moloni Logo", name: "moloni" },
      { src: Biu, alt: "biu Logo", name: "biu" },
      { src: Blix, alt: "Blix Logo", name: "Blix" },
    ],
  },
];

const jsIntegrationCategories = integrationCategories.map((category) => ({
  title: category.title,
  logos: category.logos.map((logo) => ({
    src: logo.src.src,
    alt: logo.alt,
    name: logo.name,
  })),
}));

const initialCategory = jsIntegrationCategories[0];
---

<section
  class="integrations-section highlight-section"
  id="integrations-section-complete"
>
  <div class="highlight-content">
    <!-- Desktop: Image container visible -->
    <div class="highlight-image-container desktop-only">
      <div class="integration-logos-grid" id="integration-logos-grid">
        {
          initialCategory.logos.map((logo) => (
            <div class="logo-block">
              <div class="logo-image">
                <img src={logo.src} alt={logo.alt} class="logo-vector" />
              </div>
              <span>{logo.name}</span>
            </div>
          ))
        }
      </div>
    </div>

    <div class="highlight-details">
      <h2 class="highlight-main-title">Integrações estratégicas</h2>
      <p class="subtitle">Confira nossas principais integrações estratégicas</p>
      <ul
        class="highlight-list"
        data-integration-categories={JSON.stringify(jsIntegrationCategories)}
        data-initial-category={JSON.stringify(initialCategory)}
      >
        {
          integrationCategories.map((category, index) => (
            <li data-index={index} class:list={{ active: index === 0 }}>
              {category.title}
            </li>
          ))
        }
      </ul>
    </div>
  </div>

  <!-- Mobile: Modal structure -->
  <div id="integrations-modal" class="integrations-modal mobile-only">
    <div class="integrations-modal-content">
      <span class="integrations-modal-close">&times;</span>
      <div class="integration-logos-grid" id="integration-logos-grid-mobile">
        <!-- Mobile logos will be injected here by the script -->
      </div>
    </div>
  </div>
</section>

<script client:load>
  document.addEventListener("astro:page-load", () => {
    const highlightList = document.querySelector(".highlight-list");
    if (!highlightList) return;

    const jsIntegrationCategories = JSON.parse(
      highlightList.dataset.integrationCategories || "[]"
    );
    const initialCategory = JSON.parse(
      highlightList.dataset.initialCategory || "{}"
    );

    setupIntegrationsSection(jsIntegrationCategories, initialCategory);
  });

  function setupIntegrationsSection(categories, initialCat) {
    const listItems = document.querySelectorAll(".highlight-list li");
    const integrationLogosGrid = document.getElementById(
      "integration-logos-grid"
    );
    const integrationLogosGridMobile = document.getElementById(
      "integration-logos-grid-mobile"
    );
    const modal = document.getElementById("integrations-modal");
    const closeModal = document.querySelector(".integrations-modal-close");

    if (
      !integrationLogosGrid ||
      !modal ||
      !closeModal ||
      !integrationLogosGridMobile
    ) {
      console.error("Required elements for integrations section not found.");
      return;
    }

    const renderLogos = (categoryToDisplay, grid) => {
      if (!grid) return;
      grid.innerHTML = ""; // Clear existing logos
      categoryToDisplay.logos.forEach((logo) => {
        const logoBlock = document.createElement("div");
        logoBlock.classList.add("logo-block");

        const logoImageDiv = document.createElement("div");
        logoImageDiv.classList.add("logo-image");

        const img = document.createElement("img");
        img.src = logo.src;
        img.alt = logo.alt;
        img.classList.add("logo-vector");

        const span = document.createElement("span");
        span.textContent = logo.name;

        logoImageDiv.appendChild(img);
        logoBlock.appendChild(logoImageDiv);
        logoBlock.appendChild(span);
        grid.appendChild(logoBlock);
      });
    };

    // Initial render for desktop
    if (window.innerWidth >= 960) {
      renderLogos(initialCat, integrationLogosGrid);
    }

    const handleInteraction = (event) => {
      // For mobile, only respond to clicks
      if (window.innerWidth < 960 && event.type !== "click") {
        return;
      }

      listItems.forEach((li) => li.classList.remove("active"));
      const target = event.currentTarget;
      if (target instanceof HTMLElement) {
        target.classList.add("active");

        const index = target.dataset.index;
        if (index !== undefined) {
          const category = categories[parseInt(index)];
          if (category) {
            if (window.innerWidth < 960) {
              // Mobile: render in modal and show it
              renderLogos(category, integrationLogosGridMobile);
              modal.style.display = "flex";
            } else {
              // Desktop: render in main grid
              renderLogos(category, integrationLogosGrid);
            }
          }
        }
      }
    };

    listItems.forEach((item) => {
      // We add both listeners and let the handler decide the action
      item.addEventListener("mouseenter", handleInteraction);
      item.addEventListener("click", handleInteraction);
    });

    closeModal.addEventListener("click", () => {
      modal.style.display = "none";
    });

    window.addEventListener("click", (event) => {
      if (event.target == modal) {
        modal.style.display = "none";
      }
    });

    // Handle resize to switch between desktop/mobile logic
    let resizeTimeout;
    window.addEventListener("resize", () => {
      clearTimeout(resizeTimeout);
      resizeTimeout = setTimeout(() => {
        // Re-render initial category on resize to ensure correct view is shown
        if (window.innerWidth >= 960) {
          renderLogos(initialCat, integrationLogosGrid);
          modal.style.display = "none"; // Hide modal on resize to desktop
        } else {
          integrationLogosGrid.innerHTML = ""; // Clear desktop grid on resize to mobile
        }
      }, 250);
    });
  }
</script>

<style is:global>
  /* Modal Styles */
  .integrations-modal {
    display: none; /* Hidden by default */
    position: fixed;
    align-items: center;
    z-index: 1000;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgba(0, 0, 0, 0.8);
  }

  .integrations-modal-content {
    background-color: var(--color-background);
    margin: 5% auto;
    padding: 20px;
    border: var(--border);
    border-radius: clamp(1rem, 1.5cqw, 8rem);
    width: 90%;
    max-width: 600px;
    position: relative;
  }

  .integrations-modal-close {
    color: #aaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
    line-height: 1;
    position: absolute;
    top: 2cqb;
    right: 2.8cqb;
  }

  .integrations-modal-close:hover,
  .integrations-modal-close:focus {
    color: white;
    text-decoration: none;
    cursor: pointer;
  }

  /* General Styles */
  .logo-block span {
    font-size: max(0.7em, 0.8cqw);
    color: white;
    font-weight: var(--font-weight-semi-bold);
    margin-top: 3cqb;
  }
  .highlight-main-title {
    margin-bottom: 0;
  }
  .integrations-section {
    padding: 14cqb var(--space-xxl);
  }
  .highlight-content {
    display: flex;
    flex-direction: column;
    gap: 2cqw;
  }

  .highlight-image-container {
    position: relative;
    width: 100%;
    transition: box-shadow 0.3s ease;
    display: flex;
    align-items: center;
  }

  .integration-logos-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(16cqb, 1fr));
    align-content: center;
    gap: 1cqb;
    width: 100%;
    height: 100%;
    align-items: center;
    justify-content: center;
    overflow-y: auto;
    z-index: 2;
    opacity: 1;
    transition: opacity 0.5s ease-in-out;
  }

  .logo-block {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    text-align: center;
    padding: 1cqb;
    background-color: rgba(255, 255, 255, 0.05);
    border: var(--border);
    border-radius: clamp(1rem, 1.5cqw, 8rem);
    height: 20cqb;
  }

  .logo-image {
    width: 60px;
    height: 60px;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .logo-vector {
    max-width: 100%;
    max-height: 100%;
    object-fit: contain;
  }

  .highlight-details {
    width: 100%;
    display: flex;
    flex-direction: column;
    gap: 1em;
  }

  .highlight-list {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .highlight-list li {
    position: relative;
    font-size: max(1.4em, 2cqw);
    line-height: 1.8;
    color: var(--color-link);
    cursor: pointer;
    transition: color 0.3s ease;
    padding-bottom: 0.2em;
    width: max-content;
    font-weight: 220;
    color: hsl(0, 0%, 80%);
  }

  .highlight-list li::before {
    content: "";
    position: absolute;
    bottom: 0;
    right: 0%;
    width: 0;
    height: 0.1cqw;
    background-color: hsla(38, 70%, 62%, 1);
    transition: width 0.3s ease;
  }

  .highlight-list li:hover,
  .highlight-list li.active {
    color: var(--color-blue);
  }

  .highlight-list li:hover::before,
  .highlight-list li.active::before {
    width: 100%;
  }

  /* Mobile Styles */
  @media (max-width: 960px) {
    .desktop-only {
      display: none;
    }
    .mobile-only {
      display: none; /* Modal is hidden by default, shown via script */
    }
    #integration-logos-grid-mobile {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(9cqb, 1fr));
      margin-top: 6cqb;
    }
  }

  /* Desktop Styles */
  @media (min-width: 960px) {
    .mobile-only {
      display: none !important; /* Ensure modal is never shown on desktop */
    }
    .desktop-only {
      display: flex;
    }
    .highlight-content {
      flex-direction: row;
      justify-content: space-between;
      align-items: center;
    }
    .highlight-image-container {
      width: 50%;
      z-index: 1;
      background: var(--color-background);
      height: -webkit-fill-available;
    }
    .highlight-details {
      width: 45%;
    }
  }
</style>
