---
interface Props {
  testimonial: string;
  clientName: string;
  clientJob: string;
}

const { testimonial, clientName, clientJob } = Astro.props;
---

<div class="testimonial-card">
  <p class="testimonial-text">{testimonial}</p>
  <div class="client-info">
    <div class="client-avatar"></div>
    <div class="client-details">
      <p class="client-name">{clientName}</p>
      <p class="client-job">{clientJob}</p>
    </div>
  </div>
</div>

<style>
  .testimonial-card {
    position: relative;
    background-color: var(--color-background); /* Original background color */
    border: var(--border);
    border-radius: clamp(1rem,1.5cqw,8rem);
    padding: max(1.5em, 2.5cqw); /* Original padding for content */
    text-align: left;
    color: var(--color-button-text);
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    justify-content: space-between; /* Push client info to bottom */
    gap: max(0.8em, 1.2cqw); /* Adjusted gap, responsive with cqw */
    transition: transform 0.3s ease;
    width: 100%; /* Ensure cards take full width of their container */
    flex-shrink: 0; /* Prevent cards from shrinking */
  }

  .testimonial-card:hover {
    transform: translateY(-0.1px);
  }

  .testimonial-card::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    border-radius: clamp(1rem,1.5cqw,8rem); /* Ajustado para FeatureBlock */
    padding: 0.1cqw; /* Espessura da borda */
    background: linear-gradient(
      45deg,
      hsl(40, 59%, 27%) 0%,
      hsl(40, 64%, 52%) 40%,
      hsl(40, 68%, 69%) 100%
    );
    -webkit-mask:
      linear-gradient(#fff 0 0) content-box,
      linear-gradient(#fff 0 0);
    mask:
      linear-gradient(#fff 0 0) content-box,
      linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
    opacity: 0; /* Hidden by default */
    transition: opacity 0.3s ease;
    z-index: -1; /* Behind the card content */
  }

  .testimonial-card:hover::before {
    opacity: 1; /* Visible on hover */
  }

  .testimonial-text {
    font-size: max(0.9em, 1.3cqw); /* Larger, more prominent text */
    line-height: 1.6;
    margin-bottom: auto; /* Push client info to bottom */
    font-weight: var(--font-weight-normal);
  }

  .client-info {
    display: flex;
    align-items: center;
    gap: max(0.8em, 1.2cqw); /* Responsive gap */
    margin-top: max(0.8em, 1.2cqw); /* Responsive space from testimonial text */
  }

  .client-avatar {
    width: max(2.5em, 3.5cqw); /* Responsive width */
    height: max(2.5em, 3.5cqw); /* Responsive height */
    border-radius: 50%;
    background-color: hsla(0, 0%, 80%, 1); /* Placeholder avatar color */
    flex-shrink: 0; /* Prevent avatar from shrinking */
  }

  .client-details {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
  }

  .client-name {
    font-size: max(1em, 1.1cqw); /* Responsive font size */
    color: hsla(38, 70%, 95%, 1);
    font-weight: var(--font-weight-bold);
  }

  .client-job {
    font-size: max(0.7em, 1.1cqw); /* Responsive font size */
    color: hsla(38, 70%, 95%, 0.7);
  }
</style>
