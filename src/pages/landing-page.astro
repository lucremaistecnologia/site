---
import { Image } from "astro:assets";
import LandingPageLayout from "../layouts/LandingPageLayout.astro";
import TestimonialsSection from "../components/TestimonialsSection.astro";
import StandardCallToAction from "../components/StandardCallToAction.astro";
import FounderSection from "../components/FounderSection.astro";
import FAQSection from "../components/FAQSection.astro";
import HighlightSection from "../components/HighlightSection.astro";
import ForYou from "../components/ForYou.astro";
import IntegrationsSection from "../components/IntegrationsSection.astro";
import LucreLogoNormal from "../../public/logos/lucre+ logo normal.svg";
import Swiper1 from "../components/SwiperComponentLanding1.astro";
import Swiper2 from "../components/SwiperComponentLanding2.astro";
import taxas from "../../public/taxas.webp";
import aprovação from "../../public/aprovação.webp";
import integrações from "../../public/integrações.webp";
import coprodução from "../../public/coprodução.webp";
import destaque from "../../public/destaque.webp";
import ofertas from "../../public/ofertas.webp";
import FormLanding from "../components/FormLanding.astro";
---

<LandingPageLayout title="Lucre+ Landing Page">
  <script type="application/ld+json" slot="head">
    {
      "@context": "https://schema.org",
      "@type": "WebPage",
      "name": "Lucre+ Landing Page",
      "url": "https://lucre.com/landing-page",
      "description": "Descubra como você pode reduzir as taxas sobre as vendas e aumentar seus lucros com a Lucre+."
    }
  </script>
  <Fragment slot="header"></Fragment>
  <Fragment slot="footer"></Fragment>
  <main>
    <section class="landing-logo-section">
      <Image
        src={LucreLogoNormal}
        alt="Lucre+ Logo"
        width={150}
        height={50}
        class="landing-logo"
      />
    </section>
    <section class="landing-hero-section">
      <h1>Descubra como você pode reduzir as taxas sobre as vendas</h1>
      <div class="video-placeholder" id="video-container">
        <video
          autoplay
          muted
          playsinline
          src="/videos/This Christmas.mp4"
          id="vsl-video"
        >
          Seu navegador não suporta a tag de vídeo.
        </video>
        <div id="unmute-overlay" class="unmute-overlay">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="48"
            height="48"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
            class="icon-sound"
            ><path d="M11 5L6 9H2v6h4l5 4V5z"></path><path
              d="M15.54 8.46a5 5 0 0 1 0 7.07"></path></svg
          >
          <span
            >Seu vídeo começou!<br /><strong>Clique para ativar o som</strong
            ></span
          >
        </div>
        <div id="video-controls" class="video-controls">
          <button id="play-pause-button">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="24"
              height="24"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
              class="icon-pause"
              style="display:block"
              ><rect x="6" y="4" width="4" height="16"></rect><rect
                x="14"
                y="4"
                width="4"
                height="16"></rect></svg
            >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="24"
              height="24"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
              class="icon-play"
              style="display:none"
              ><polygon points="5 3 19 12 5 21 5 3"></polygon></svg
            >
          </button>
          <div id="progress-bar" class="progress-bar">
            <div id="progress" class="progress"></div>
          </div>
          <button id="mute-button">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="24"
              height="24"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
              class="icon-volume-2"
              ><polygon points="11 5 6 9 2 9 2 15 6 15 11 19 11 5"
              ></polygon><path d="M15.54 8.46a5 5 0 0 1 0 7.07"></path><path
                d="M19.07 4.93a10 10 0 0 1 0 14.14"></path></svg
            >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="24"
              height="24"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
              class="icon-volume-x"
              style="display:none"
              ><polygon points="11 5 6 9 2 9 2 15 6 15 11 19 11 5"
              ></polygon><line x1="23" y1="9" x2="17" y2="15"></line><line
                x1="17"
                y1="9"
                x2="23"
                y2="15"></line></svg
            >
          </button>
          <button id="fullscreen-button">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="24"
              height="24"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
              class="icon-maximize"
              ><path
                d="M8 3H5a2 2 0 0 0-2 2v3m18 0V5a2 2 0 0 0-2-2h-3m0 18h3a2 2 0 0 0 2-2v-3M3 16v3a2 2 0 0 0 2 2h3"
              ></path></svg
            >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="24"
              height="24"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
              class="icon-minimize"
              style="display:none"
              ><path
                d="M8 3v3a2 2 0 0 1-2 2H3m18 0h-3a2 2 0 0 1-2-2V3m0 18v-3a2 2 0 0 0-2-2h-3M3 16h3a2 2 0 0 0 2-2v-3"
              ></path></svg
            >
          </button>
        </div>
      </div>
    </section>
    <div id="vsl-content" style="display: none;">
      <div class="button">
        <button class="primary">Quero Aumentar Meus Lucros Agora!</button>
      </div>
      <section class="landing-feature-blocks-section">
        <Swiper1 />
      </section>
      <section class="needs-section">
        <div class="needs-content-left">
          <h1>O que você precisa para vender mais?</h1>
          <p>
            Temos todas as funcionalidades que você precisa para vender mais,
            com maior praticidade e maior lucratividade.
          </p>
          <button class="primary">Lucre agora</button>
        </div>
        <div class="landing-feature-blocks-section needs-content-right">
          <Swiper2 />
        </div>
      </section>
      <section id="highlight-section" style="padding: 0;">
        <HighlightSection
          mainTitle="Temos os melhores benefícios para o seu negócio"
          highlightItems={[
            {
              title: "As melhores taxas e prazos",
              description:
                "Temos as melhores taxas do mercado para recebimento em dois dias úteis, trinta dias ou recebimento de uma parcela a cada mês.",
              imageSrc: taxas,
            },
            {
              title: "Aprovação de vendas maior que 98%",
              description:
                "Garantimos altas taxas de aprovação sobre as vendas com cartão de crédito, impedindo o bloqueio indevido de vendas e redução de conversão.",
              imageSrc: aprovação,
            },
            {
              title: "Criação de ofertas por WhatsApp",
              description:
                "Quer mais agilidade para vender? Na Lucre + você consegue gerar ofertas com novos preços conversando pelo WhatsApp com nossa IA de atendimento. Rápido, prático e eficiente para quem vende com processo comercial estruturado.",
              imageSrc: ofertas,
            },
            {
              title: "Venda de assinaturas",
              description:
                "Você pode escolher o período de recorrência que melhor se adapta ao seu negócio.",
              imageSrc: destaque,
            },
            {
              title: "Mais de 90 integrações",
              description:
                "Temos integrações com áreas de membros, pixels de conversão, recuperação de vendas, sistemas de automação, emissão de notas fiscais e muitas outras.",
              imageSrc: integrações,
            },
            {
              title: "Sistema de coprodução",
              description:
                "Temos toda a estrutura necessária para que o valor de cada venda seja dividida adequadamente entre os coprodutores de cada produto ou serviço vendido.",
              imageSrc: coprodução,
            },
          ]}
        />
      </section>

      <IntegrationsSection openInNewTab={true} />

      <TestimonialsSection />

      <ForYou />

      <StandardCallToAction
        title="Pronto para maximizar seus lucros?"
        paragraph="Temos as melhores soluções para suas vendas via cartão de crédito."
        buttonText="quero Lucrar mais agora"
        showParagraph={true}
      />

      <FounderSection
        title="Nosso Fundador"
        description="Amós Silva é Engenheiro Aeronáutico formado pelo Instituto Tecnológico de Aeronáutica (ITA), mestre em Engenharia pelo mesmo instituto e também professor no ITA.<br/><br/>Após anos de experiência no mercado digital, na liderança de um curso online pré-vestibular que aprova alunos em vestibulares altamente concorridos como ITA, IME e USP, Amós identificou um grande desafio enfrentado por Mentores,Educadores e Empreendedores Digitais: <strong>as altas taxas cobradas pelas plataformas de pagamento tradicionais.</strong><br/><br/>Foi a partir dessa dor que surgiu a <strong>Lucre+</strong>, uma solução criada para ajudar esses profissionais a maximizarem seus lucros e terem mais autonomia sobre seus negócios no digital.<br/><br/><h4>“Solucionar problemas é melhorar vidas e transformar o nosso país”<br/><br/>Amós Silva</h4>"
        imagePath="/amos.png"
      />

      <FAQSection />

      <footer class="landing-footer">
        <p>Informações importantes</p>
      </footer>
      <FormLanding />
    </div>
  </main>
</LandingPageLayout>

<style is:global>
  body {
    background-color: var(
      --color-background
    ); /* Ensure consistent background */
    color: var(--color-text); /* Ensure consistent text color */
  }
  main {
    overflow: clip;
  }
  .landing-logo-section {
    display: flex;
    justify-content: center;
    padding: var(--space-l); /* Using global spacing variable */
    background-color: var(--color-background); /* Match body background */
  }

  .landing-hero-section {
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
    padding: 0 var(--space-xxl) 8cqb; /* Using global spacing variables */
    gap: var(--space-l); /* Using global spacing variable */
  }

  .landing-hero-section h1 {
    font-size: max(2.5em, 4cqw); /* Aligned with global h1 */
    color: var(--color-text);
    margin-bottom: 0;
  }

  .video-placeholder {
    width: 80%;
    background-color: #333; /* Consider defining a global placeholder color */
    aspect-ratio: 16 / 9;
    display: flex;
    align-items: center;
    justify-content: center;
    color: #fff; /* Consider defining a global placeholder text color */
    font-size: max(1.5rem, 2.5cqw); /* Using max() for consistency */
    position: relative; /* Add relative positioning to contain the overlay */
    border-radius: 2cqb;
    overflow: hidden;
  }

  .unmute-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.5);
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    color: white;
    cursor: pointer;
    z-index: 1;
  }

  .unmute-overlay .icon-sound {
    margin-bottom: 1rem;
  }

  .unmute-overlay span {
    font-size: 1.2rem;
  }

  .video-placeholder video {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  .button {
    width: 100%;
    display: flex;
    justify-content: center;
    margin-top: var(--space-l); /* Using global spacing variable */
  }
  .button button.primary {
    background-color: var(--color-button-background);
    color: var(--color-button-text);
    padding: var(--space-s) var(--space-m);
    font-size: var(--space-s);
    border-radius: 1.4cqb;
    cursor: pointer;
  }

  .landing-feature-blocks-section {
    padding: var(--space-xxl); /* Using global spacing variables */
    /* Removed redundant background-color as body already sets it */
  }
  .needs-section {
    display: flex;
    gap: var(--space-m); /* Using global spacing */
    padding: var(--space-xxl); /* Using global spacing */
    background-color: hsla(228, 12%, 10%, 1);
    flex-direction: row;
    text-align: left;
    align-items: flex-start; /* Ensure alignment for sticky behavior */
  }
  .needs-content-left {
    flex: 1;
    display: flex;
    flex-direction: column;
    gap: var(--space-m); /* Spacing between elements */
    max-width: 50cqw; /* Limit width for readability */
    position: sticky; /* Make it sticky */
    top: 0; /* Stick to the top of the viewport */
    align-self: flex-start; /* Ensure it aligns to the start within the flex container */
    height: 100vh; /* Ensure it takes full viewport height to allow scrolling of content next to it */
    justify-content: center; /* Center content vertically within the sticky element */
  }
  .needs-content-right {
    max-width: 50vw; /* Limit width for readability */
    padding: 0;
  }
  .needs-content-left h1 {
    font-size: max(2.5em, 4cqw); /* Aligned with global h1 */
    color: var(--color-text);
    margin-bottom: 0; /* Reset margin as gap handles spacing */
  }
  .needs-content-left p {
    font-size: max(1.1em, 1.5cqw); /* Aligned with global p */
    color: var(--color-text);
    line-height: var(--line-height-base);
  }
  .landing-footer {
    background-color: var(--color-background); /* Match body background */
    color: var(--color-text);
    text-align: center;
    padding: var(--space-l); /* Using global spacing variable */
    border-top: 1px solid var(--color-background); /* Using background color for subtle border, or define a specific border color variable */
  }
  @media (max-width: 960px) {
    .landing-feature-blocks-section {
      padding: 8cqb 0;
    }
    .needs-section {
      flex-direction: column;
      padding: 0cqb;
    }
    .needs-content-left {
      position: static;
      height: auto;
      max-width: 100%;
      padding: 8cqb var(--space-xxl);
    }
    .needs-content-right {
      max-width: 100vw; /* Limit width for readability */
      padding: 0 0 8cqb 0;
    }
    .video-placeholder {
      width: 100%;
    }
    .video-placeholder.controls-active .video-controls {
      opacity: 1;
    }
    .button button.primary {
      font-size: clamp(
        1rem,
        3cqi,
        1.2rem
      ); /* Adjust button font size for smaller screens */
      width: 80cqw;
    }
  }
  .video-placeholder.controls-active:hover .video-controls {
    opacity: 1;
  }

  .video-controls {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    background-color: rgba(0, 0, 0, 0.5);
    display: flex;
    align-items: center;
    padding: 0.5rem;
    opacity: 0;
    transition: opacity 0.3s ease;
    z-index: 2;
  }

  .video-controls button {
    background: none;
    border: none;
    color: white;
    cursor: pointer;
    padding: 0.5rem;
    width: auto;
  }

  .progress-bar {
    flex-grow: 1;
    height: 8px;
    background-color: rgba(255, 255, 255, 0.3);
    margin: 0 1rem;
    cursor: default;
    border-radius: 4px;
    pointer-events: none;
  }

  .progress {
    height: 100%;
    background-color: burlywood; /* Use a brand color */
    width: 0%;
    border-radius: 4px;
  }
</style>

<script>
document.addEventListener("DOMContentLoaded", function () {
  // Elements
  const vslVideo = document.getElementById("vsl-video");
  const vslContent = document.getElementById("vsl-content");
  const unmuteOverlay = document.getElementById("unmute-overlay");
  const videoContainer = document.getElementById("video-container");
  const progressBar = document.getElementById("progress-bar");
  const progressEl = document.getElementById("progress");

  if (!vslVideo) {
    console.warn("vsl-video element not found. Aborting video initialization.");
    return;
  }

  // State
  let contentShown = false;

  // Helper: safely set cookie (1 year)
  function setWatchedCookie() {
    // SameSite=Lax for basic safety
    document.cookie = "videoAssistido=true; max-age=31536000; path=/; SameSite=Lax";
  }

  // Modal handling (buttons inside vsl-content)
  function handleButtonClick(e) {
    e.preventDefault();
    const formModal = document.getElementById("form-modal");
    if (!formModal) return;
    formModal.style.display = "flex";

    // Close modal by clicking background
    if (!formModal.dataset.modalInit) {
      formModal.addEventListener("click", function (ev) {
        if (ev.target === formModal) formModal.style.display = "none";
      });
      // Close on Esc
      window.addEventListener("keydown", function (ev) {
        if (ev.key === "Escape") formModal.style.display = "none";
      });
      formModal.dataset.modalInit = "true";
    }
  }

  function initializeModal() {
    const buttonsRoot = vslContent || document; // prefer inside content
    const buttons = buttonsRoot.querySelectorAll("button.primary");
    buttons.forEach(function (btn) {
      // Avoid attaching duplicates by marking the element
      if (!btn.dataset.primaryInit) {
        btn.addEventListener("click", handleButtonClick);
        btn.dataset.primaryInit = "true";
      }
    });
  }

  // Function that shows the VSL content and initializes dependent scripts
  function showVslContent() {
    if (contentShown) return;
    if (!vslContent) return;

    vslContent.style.display = "block";
    contentShown = true;

    // Persist state so future visits show immediately
    try {
      localStorage.setItem("conteudoLiberado", "true");
    } catch (err) {
      console.warn("Could not write conteudoLiberado to localStorage:", err);
    }
    setWatchedCookie();

    // Dispatch event for other components that may listen (e.g. Swiper in Testimonials)
    const event = new CustomEvent("vsl-content-visible");
    document.dispatchEvent(event);

    // Reinitialize modal buttons inside the revealed content
    initializeModal();

    // If there's a global initializer for testimonials/carousels, call it safely
    try {
      if (typeof window.initTestimonials === "function") {
        window.initTestimonials();
      }
    } catch (err) {
      console.warn("initTestimonials threw:", err);
    }
  }

  // Restore video time (after metadata available)
  vslVideo.addEventListener("loadedmetadata", function () {
    try {
      const saved = localStorage.getItem("videoTime");
      if (saved) {
        const parsed = parseFloat(saved);
        if (!isNaN(parsed) && isFinite(parsed)) {
          // Clamp to duration - small epsilon
          const safeTime = Math.min(parsed, Math.max(0, vslVideo.duration - 0.5));
          if (safeTime > 0) vslVideo.currentTime = safeTime;
        }
      }
    } catch (err) {
      console.warn("Could not restore saved video time:", err);
    }
  });

  // Update progress bar with custom easing (first 2/3 -> first 80%, last 1/3 -> last 20%)
  function updateProgressUI() {
    if (!progressEl) return;
    const duration = vslVideo.duration;
    const currentTime = vslVideo.currentTime;

    if (!duration || !isFinite(duration) || duration <= 0) {
      progressEl.style.width = "0%";
      return;
    }

    const firstTwoThirds = (2 / 3) * duration;
    let percentage = 0;

    if (currentTime < firstTwoThirds) {
      percentage = (currentTime / firstTwoThirds) * 80;
    } else {
      const remainingTime = currentTime - firstTwoThirds;
      const remainingDuration = Math.max(0.0001, duration - firstTwoThirds);
      percentage = 80 + (remainingTime / remainingDuration) * 20;
    }

    // Clamp and apply
    percentage = Math.max(0, Math.min(100, percentage));
    progressEl.style.width = percentage + "%";
  }

  // Always save currentTime so we can resume across reloads/tabs
  vslVideo.addEventListener("timeupdate", function () {
    try {
      localStorage.setItem("videoTime", vslVideo.currentTime.toString());
    } catch (err) {
      // ignore localStorage errors
    }

    // Update progress UI
    updateProgressUI();

    // If first visit, only show after 5 seconds
    if (!contentShown && vslVideo.currentTime >= 5) {
      showVslContent();
    }
  });

  // Progress bar click-to-seek
  if (progressBar) {
    progressBar.addEventListener("click", function (ev) {
      if (!vslVideo.duration || vslVideo.duration === Infinity) return;
      const rect = progressBar.getBoundingClientRect();
      const clickX = ev.clientX - rect.left;
      const pct = Math.max(0, Math.min(1, clickX / rect.width));
      vslVideo.currentTime = pct * vslVideo.duration;
    });
  }

  // Check if already watched (cookie or localStorage)
  const jaAssistiu =
    (function () {
      try {
        return (
          localStorage.getItem("conteudoLiberado") === "true" ||
          document.cookie.indexOf("videoAssistido=true") !== -1
        );
      } catch (err) {
        // localStorage might be disabled
        return document.cookie.indexOf("videoAssistido=true") !== -1;
      }
    })();

  // If watched before, show content immediately (but after current JS tick so other inits can run)
  if (jaAssistiu) {
    // Use setTimeout 0 to let other synchronous initialization run first
    setTimeout(function () {
      showVslContent();
    }, 0);
  }

  // --- Video Controls (play/pause, mute, fullscreen, icons) ---
  // Query icons/buttons (may be null on certain builds)
  const playPauseButton = document.getElementById("play-pause-button");
  const muteButton = document.getElementById("mute-button");
  const fullscreenButton = document.getElementById("fullscreen-button");
  const iconPause = document.querySelector(".icon-pause");
  const iconPlay = document.querySelector(".icon-play");
  const iconVolume2 = document.querySelector(".icon-volume-2");
  const iconVolumeX = document.querySelector(".icon-volume-x");
  const iconMaximize = document.querySelector(".icon-maximize");
  const iconMinimize = document.querySelector(".icon-minimize");

  function updatePlayPauseIcons() {
    if (!iconPause || !iconPlay) return;
    if (vslVideo.paused) {
      iconPause.style.display = "none";
      iconPlay.style.display = "block";
    } else {
      iconPause.style.display = "block";
      iconPlay.style.display = "none";
    }
  }

  function updateVolumeIcons() {
    if (!iconVolume2 || !iconVolumeX) return;
    if (vslVideo.muted || vslVideo.volume === 0) {
      iconVolume2.style.display = "none";
      iconVolumeX.style.display = "block";
    } else {
      iconVolume2.style.display = "block";
      iconVolumeX.style.display = "none";
    }
  }

  function togglePlayPause(e) {
    if (e) e.stopPropagation && e.stopPropagation();
    if (vslVideo.paused) {
      vslVideo.play().catch(function (err) {
        // autoplay may be blocked — ignore
      });
    } else {
      vslVideo.pause();
    }
  }

  // Unmute overlay click: enable sound and show controls
  if (unmuteOverlay && videoContainer) {
    unmuteOverlay.addEventListener("click", function () {
      vslVideo.muted = false;
      unmuteOverlay.style.display = "none";
      videoContainer.classList.add("controls-active");
      vslVideo.play().catch(function () {});
      updatePlayPauseIcons();
      updateVolumeIcons();
    });
  }

  // Video click toggles play/pause
  vslVideo.addEventListener("click", function () {
    togglePlayPause();
  });

  // Play/pause button in controls
  if (playPauseButton) {
    playPauseButton.addEventListener("click", function (e) {
      e.stopPropagation();
      togglePlayPause();
    });
  }

  // Mute toggle
  if (muteButton) {
    muteButton.addEventListener("click", function (e) {
      e.stopPropagation();
      vslVideo.muted = !vslVideo.muted;
      updateVolumeIcons();
    });
  }

  // Fullscreen toggle with basic prefix fallback
  if (fullscreenButton && videoContainer) {
    fullscreenButton.addEventListener("click", function (e) {
      e.stopPropagation();
      if (!document.fullscreenElement) {
        if (videoContainer.requestFullscreen) {
          videoContainer.requestFullscreen().catch(function () {});
        } else if (videoContainer.webkitRequestFullscreen) {
          videoContainer.webkitRequestFullscreen();
        }
      } else {
        if (document.exitFullscreen) {
          document.exitFullscreen().catch(function () {});
        } else if (document.webkitExitFullscreen) {
          document.webkitExitFullscreen();
        }
      }
    });
  }

  document.addEventListener("fullscreenchange", function () {
    if (!iconMaximize || !iconMinimize) return;
    if (document.fullscreenElement) {
      iconMaximize.style.display = "none";
      iconMinimize.style.display = "block";
    } else {
      iconMaximize.style.display = "block";
      iconMinimize.style.display = "none";
    }
  });

  // Sync icons with state
  vslVideo.addEventListener("play", updatePlayPauseIcons);
  vslVideo.addEventListener("pause", updatePlayPauseIcons);
  // volumechange covers mute/unmute and volume changes
  vslVideo.addEventListener("volumechange", updateVolumeIcons);

  // Initial update of controls icons
  updatePlayPauseIcons();
  updateVolumeIcons();
  updateProgressUI();

  // Initialize modal buttons if content already visible at load
  if (vslContent && vslContent.style.display !== "none") {
    initializeModal();
  }
});
</script>
