---
import { Image } from "astro:assets";
import LandingPageLayout from "../layouts/LandingPageLayout.astro";
import TestimonialsSection from "../components/TestimonialsSection.astro";
import StandardCallToAction from "../components/StandardCallToAction.astro";
import FounderSection from "../components/FounderSection.astro";
import FAQSection from "../components/FAQSection.astro";
import HighlightSection from "../components/HighlightSection.astro";
import ForYou from "../components/ForYou.astro";
import IntegrationsSection from "../components/IntegrationsSection.astro";
import LucreLogoNormal from "../../public/logos/lucre+ logo normal.svg";
import Swiper1 from "../components/SwiperComponentLanding1.astro";
import Swiper2 from "../components/SwiperComponentLanding2.astro";
import taxas from "../../public/taxas.webp";
import aprovação from "../../public/aprovação.webp";
import integrações from "../../public/integrações.webp";
import coprodução from "../../public/coprodução.webp";
import destaque from "../../public/destaque.webp";
import ofertas from "../../public/ofertas.webp";
import FormLanding from "../components/FormLanding.astro";
---

<LandingPageLayout title="Lucre+ Landing Page">
  <script type="application/ld+json" slot="head">
    {
      "@context": "https://schema.org",
      "@type": "WebPage",
      "name": "Lucre+ Landing Page",
      "url": "https://lucre.com/landing-page",
      "description": "Descubra como você pode reduzir as taxas sobre as vendas e aumentar seus lucros com a Lucre+."
    }
  </script>
  <Fragment slot="header"></Fragment>
  <Fragment slot="footer"></Fragment>
  <main>
    <section class="landing-logo-section">
      <Image
        src={LucreLogoNormal}
        alt="Lucre+ Logo"
        width={150}
        height={50}
        class="landing-logo"
      />
    </section>
    <section class="landing-hero-section">
      <h1>Descubra como você pode reduzir as taxas sobre as vendas</h1>
      <div class="video-placeholder">
        <video
          autoplay
          muted
          playsinline
          src="/videos/This Christmas.mp4"
          id="vsl-video"
        >
          Seu navegador não suporta a tag de vídeo.
        </video>
        <div id="unmute-overlay" class="unmute-overlay">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="48"
            height="48"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
            class="icon-sound"
            ><path d="M11 5L6 9H2v6h4l5 4V5z"></path><path
              d="M15.54 8.46a5 5 0 0 1 0 7.07"></path></svg
          >
          <span
            >Seu vídeo começou!<br /><strong>Clique para ativar o som</strong
            ></span
          >
        </div>
        <div id="pause-play-overlay" class="pause-play-overlay">
          <button id="pause-button">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon-pause" style="display:block"><rect x="6" y="4" width="4" height="16"></rect><rect x="14" y="4" width="4" height="16"></rect></svg>
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon-play" style="display:none"><polygon points="5 3 19 12 5 21 5 3"></polygon></svg>
          </button>
        </div>
      </div>
    </section>
    <div id="vsl-content" style="display: none;">
      <div class="button">
        <button class="primary">Quero Aumentar Meus Lucros Agora!</button>
      </div>
      <section class="landing-feature-blocks-section">
        <Swiper1 />
      </section>
      <section class="needs-section">
        <div class="needs-content-left">
          <h1>O que você precisa para vender mais?</h1>
          <p>
            Temos todas as funcionalidades que você precisa para vender mais,
            com maior praticidade e maior lucratividade.
          </p>
          <button class="primary">Lucre agora</button>
        </div>
        <div class="landing-feature-blocks-section needs-content-right">
          <Swiper2 />
        </div>
      </section>
      <section id="highlight-section" style="padding: 0;">
        <HighlightSection
          mainTitle="Temos os melhores benefícios para o seu negócio"
          highlightItems={[
            {
              title: "As melhores taxas e prazos",
              description:
                "Temos as melhores taxas do mercado para recebimento em dois dias úteis, trinta dias ou recebimento de uma parcela a cada mês.",
              imageSrc: taxas,
            },
            {
              title: "Aprovação de vendas maior que 98%",
              description:
                "Garantimos altas taxas de aprovação sobre as vendas com cartão de crédito, impedindo o bloqueio indevido de vendas e redução de conversão.",
              imageSrc: aprovação,
            },
            {
              title: "Criação de ofertas por WhatsApp",
              description:
                "Quer mais agilidade para vender? Na Lucre + você consegue gerar ofertas com novos preços conversando pelo WhatsApp com nossa IA de atendimento. Rápido, prático e eficiente para quem vende com processo comercial estruturado.",
              imageSrc: ofertas,
            },
            {
              title: "Venda de assinaturas",
              description:
                "Você pode escolher o período de recorrência que melhor se adapta ao seu negócio.",
              imageSrc: destaque,
            },
            {
              title: "Mais de 90 integrações",
              description:
                "Temos integrações com áreas de membros, pixels de conversão, recuperação de vendas, sistemas de automação, emissão de notas fiscais e muitas outras.",
              imageSrc: integrações,
            },
            {
              title: "Sistema de coprodução",
              description:
                "Temos toda a estrutura necessária para que o valor de cada venda seja dividida adequadamente entre os coprodutores de cada produto ou serviço vendido.",
              imageSrc: coprodução,
            },
          ]}
        />
      </section>

      <IntegrationsSection openInNewTab={true} />

      <TestimonialsSection />

      <ForYou />

      <StandardCallToAction
        title="Pronto para maximizar seus lucros?"
        paragraph="Temos as melhores soluções para suas vendas via cartão de crédito."
        buttonText="quero Lucrar mais agora"
        showParagraph={true}
      />

      <FounderSection
        title="Nosso Fundador"
        description="Amós Silva é Engenheiro Aeronáutico formado pelo Instituto Tecnológico de Aeronáutica (ITA), mestre em Engenharia pelo mesmo instituto e também professor no ITA.<br/><br/>Após anos de experiência no mercado digital, na liderança de um curso online pré-vestibular que aprova alunos em vestibulares altamente concorridos como ITA, IME e USP, Amós identificou um grande desafio enfrentado por Mentores,Educadores e Empreendedores Digitais: <strong>as altas taxas cobradas pelas plataformas de pagamento tradicionais.</strong><br/><br/>Foi a partir dessa dor que surgiu a <strong>Lucre+</strong>, uma solução criada para ajudar esses profissionais a maximizarem seus lucros e terem mais autonomia sobre seus negócios no digital.<br/><br/><h4>“Solucionar problemas é melhorar vidas e transformar o nosso país”<br/><br/>Amós Silva</h4>"
        imagePath="/amos.webp"
      />

      <FAQSection />

      <footer class="landing-footer">
        <p>Informações importantes</p>
      </footer>
      <FormLanding />
    </div>
  </main>
</LandingPageLayout>

<style is:global>
  body {
    background-color: var(
      --color-background
    ); /* Ensure consistent background */
    color: var(--color-text); /* Ensure consistent text color */
  }
  main {
    overflow: clip;
  }
  .landing-logo-section {
    display: flex;
    justify-content: center;
    padding: var(--space-l); /* Using global spacing variable */
    background-color: var(--color-background); /* Match body background */
  }

  .landing-hero-section {
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
    padding: 0 var(--space-xxl); /* Using global spacing variables */
    gap: var(--space-l); /* Using global spacing variable */
  }

  .landing-hero-section h1 {
    font-size: max(2.5em, 4cqw); /* Aligned with global h1 */
    color: var(--color-text);
    margin-bottom: 0;
  }

  .video-placeholder {
    width: 80%;
    background-color: #333; /* Consider defining a global placeholder color */
    aspect-ratio: 16 / 9;
    display: flex;
    align-items: center;
    justify-content: center;
    color: #fff; /* Consider defining a global placeholder text color */
    font-size: max(1.5rem, 2.5cqw); /* Using max() for consistency */
    position: relative; /* Add relative positioning to contain the overlay */
    border-radius: 2cqb;
    overflow: hidden;
  }

  .unmute-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.5);
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    color: white;
    cursor: pointer;
    z-index: 1;
  }

  .unmute-overlay .icon-sound {
    margin-bottom: 1rem;
  }

  .unmute-overlay span {
    font-size: 1.2rem;
  }

  .video-placeholder video {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  .button {
    width: 100%;
    display: flex;
    justify-content: center;
    margin-top: var(--space-l); /* Using global spacing variable */
  }
  .button button.primary {
    background-color: var(--color-button-background);
    color: var(--color-button-text);
    padding: var(--space-s) var(--space-m);
    font-size: var(--space-s);
    border-radius: var(--border-radius);
    cursor: pointer;
  }

  .landing-feature-blocks-section {
    padding: var(--space-xxl); /* Using global spacing variables */
    /* Removed redundant background-color as body already sets it */
  }
  .needs-section {
    display: flex;
    gap: var(--space-m); /* Using global spacing */
    padding: var(--space-xxl); /* Using global spacing */
    background-color: hsla(228, 12%, 10%, 1);
    flex-direction: row;
    text-align: left;
    align-items: flex-start; /* Ensure alignment for sticky behavior */
  }
  .needs-content-left {
    flex: 1;
    display: flex;
    flex-direction: column;
    gap: var(--space-m); /* Spacing between elements */
    max-width: 50cqw; /* Limit width for readability */
    position: sticky; /* Make it sticky */
    top: 0; /* Stick to the top of the viewport */
    align-self: flex-start; /* Ensure it aligns to the start within the flex container */
    height: 100vh; /* Ensure it takes full viewport height to allow scrolling of content next to it */
    justify-content: center; /* Center content vertically within the sticky element */
  }
  .needs-content-right {
    max-width: 50vw; /* Limit width for readability */
    padding: 0;
  }
  .needs-content-left h1 {
    font-size: max(2.5em, 4cqw); /* Aligned with global h1 */
    color: var(--color-text);
    margin-bottom: 0; /* Reset margin as gap handles spacing */
  }
  .needs-content-left p {
    font-size: max(1.1em, 1.5cqw); /* Aligned with global p */
    color: var(--color-text);
    line-height: var(--line-height-base);
  }
  .landing-footer {
    background-color: var(--color-background); /* Match body background */
    color: var(--color-text);
    text-align: center;
    padding: var(--space-l); /* Using global spacing variable */
    border-top: 1px solid var(--color-background); /* Using background color for subtle border, or define a specific border color variable */
  }
  @media (max-width: 960px) {
    .landing-feature-blocks-section {
      padding: 8cqb 0;
    }
    .needs-section {
      flex-direction: column;
      padding: 0cqb;
    }
    .needs-content-left {
      position: static;
      height: auto;
      max-width: 100%;
      padding: 8cqb var(--space-xxl);
    }
    .needs-content-right {
      max-width: 100vw; /* Limit width for readability */
      padding: 0 0 8cqb 0;
    }
    .video-placeholder {
      width: 100%;
    }
  }
  .pause-play-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.5);
    display: none; /* Hidden by default */
    flex-direction: column;
    align-items: center;
    justify-content: center;
    color: white;
    z-index: 2;
  }

  .pause-play-overlay button {
    background-color: rgba(255, 255, 255, 0.2);
    color: white;
    border: none;
    padding: 0.5rem 1rem;
    margin: 0.5rem;
    cursor: pointer;
    border-radius: 5px;
    width: auto;
  }
</style>

<script>
  console.log("LandingPageLayout.astro script is executing!");

  // Verifica se o cookie 'videoAssistido' existe
  if (document.cookie.indexOf('videoAssistido=true') === -1) {
    // Cookie não existe, inicia o timer do vídeo
    const vslVideo = document.getElementById("vsl-video") as HTMLVideoElement;
    const vslContent = document.getElementById("vsl-content");

    if (vslVideo && vslContent) {
      vslVideo.addEventListener("timeupdate", () => {
        if (vslVideo.currentTime >= 5) {
          // Define o cookie 'videoAssistido' com valor 'true'
          document.cookie = 'videoAssistido=true; max-age=31536000; path=/'; // Define o cookie para 1 ano
          // Mostra o conteúdo da página
          vslContent.style.display = "block";
        }
      });
    }
  } else {
    // Cookie existe, mostra o conteúdo da página imediatamente
    const vslContent = document.getElementById("vsl-content");
    if (vslContent) {
      vslContent.style.display = "block";
    }
  }

  // Define handleButtonClick outside to ensure a stable reference for removeEventListener
  function handleButtonClick(event: Event) {
    const formModal = document.getElementById("form-modal");
    console.log("Button clicked! Event target:", event.target);
    if (formModal) {
      console.log("formModal found. Current display:", formModal.style.display);
      // Prevent opening the modal if the clicked button is inside the modal itself
      if (event.target instanceof Node && !formModal.contains(event.target)) {
        formModal.style.display = "flex";
        console.log("formModal display set to flex.");
      } else {
        console.log("Click originated inside formModal, not opening.");
      }
    } else {
      console.error("formModal not found when button was clicked.");
    }
  }

  function initializeModal() {
    const formModal = document.getElementById("form-modal");
    console.log("initializeModal called.");
    if (!formModal) {
      console.error("formModal element not found during initialization.");
      return;
    }
    console.log("formModal found during initialization.");

    document.querySelectorAll("button.primary").forEach((button) => {
      console.log("Attaching listener to button:", button);
      button.removeEventListener("click", handleButtonClick); // Remove existing to prevent duplicates
      button.addEventListener("click", handleButtonClick);
    });
  }

  // Add the listener for the DOMContentLoaded event
  document.addEventListener("DOMContentLoaded", initializeModal);

  // Keep astro:page-load for View Transitions compatibility if needed, but prioritize DOMContentLoaded for initial load
  // document.addEventListener("astro:page-load", initializeModal);

  const vslVideo = document.getElementById("vsl-video") as HTMLVideoElement;
  const vslContent = document.getElementById("vsl-content");
  const unmuteOverlay = document.getElementById("unmute-overlay");
  let contentShown = false;

  if (vslVideo && vslContent) {
    vslVideo.addEventListener("timeupdate", () => {
      if (vslVideo.currentTime >= 5 && !contentShown) {
        vslContent.style.display = "block";
        contentShown = true;
        // Dispara um evento personalizado para notificar que o conteúdo está visível
        const event = new CustomEvent("vsl-content-visible");
        document.dispatchEvent(event);
      }
    });
  }

  if (unmuteOverlay && vslVideo) {
    const pausePlayOverlay = document.getElementById("pause-play-overlay");
    const pauseButton = document.getElementById("pause-button");
    const iconPause = document.querySelector(".icon-pause") as HTMLElement;
    const iconPlay = document.querySelector(".icon-play") as HTMLElement;

    unmuteOverlay.addEventListener("click", () => {
      vslVideo.muted = false;
      unmuteOverlay.style.display = "none";
      if (pausePlayOverlay) {
        pausePlayOverlay.style.display = "flex"; // Show pause/play overlay
      }
    });

    if (pauseButton && iconPause && iconPlay) {
      
      if (vslVideo.paused) {
          iconPause.style.display = "none";
          iconPlay.style.display = "block";
        } else {
          iconPause.style.display = "block";
          iconPlay.style.display = "none";
        }

      pauseButton.addEventListener("click", () => {
        if (iconPause.style.display === "block") {
          vslVideo.pause();
          iconPause.style.display = "none";
          iconPlay.style.display = "block";
        } else {
          vslVideo.play();
          iconPause.style.display = "block";
          iconPlay.style.display = "none";
        }
      });
    }
  }
</script>
